We have N cycles.

Let's assume we load A and X with white and black at the start. We start at the left of the glyph.

We have 34 cycles left. MUST set reg to black before the end...


We are reading a glyph that is 16x15 ie 16 pixels wide. (NO! ... 14 pixels wide apart from a few dodgy glyphs!)

Last write is always "set to black" taking 4 cycles... that give us 30 cycles.

So last bit must be "nop:write black"...

So for each pixel we know what colour we currently are, and which one we want to be.

But if we have written to the register, we cannot then write for 4 cycles.

So... state machine...

- Desired colour.
- Current colour.
- Cycles left from currently executing instruction. (If 0, we must write an instruction!)


Note: If we are thinking of writing a colour, check next 3 pixels and only write if at least one of them is also set?





 



