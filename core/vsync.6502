;*************************************
; Functions for synchronising code exactly to the vsync.
; These are a key part of the stable raster framework.
;
;*************************************

; START of "sync to vsync" code taken fron the stable rasters demo
.sync
php

lda #sysViaBit_Flags_VSync
.vsync0
bit sysViaFlags
beq vsync0      ; wait for vsync
sta sysViaFlags ; ack vsync

; Wait for vsync again! (This may be totally unnecessary. It was put in while trying to get everything working).

.vsync1
bit sysViaFlags
beq vsync1      ; wait for vsync (Again)

; now we're within 10 cycles of vsync having hit

; delay just less than one frame
.syncloop
sta sysViaFlags ; 4(stretched), ack vsync

; { this takes (5*ycount+2+4)*xcount cycles
; x=55,y=142 -> 39902 cycles. one frame=39936
ldx #142        ; 2
.deloop
ldy #55         ; 2
.innerloop
dey             ; 2
bne innerloop   ; 3
                ; =152
dex             ; 2
bne deloop      ; 3
;}

nop:nop:nop:nop:nop:nop:nop:nop:nop ; +16
bit sysViaFlags                     ; 4(stretched)
bne syncloop                        ; +3
; 4+39902+16+4+3+3 = 39932
; ne means vsync has hit
; loop until it hasn't hit

; now we're synced to vsync
; delay to start of frame
ldx #246
.deloop2
nop:nop:nop:nop:nop
dex
bne deloop2
nop:nop:nop:nop:nop:nop
plp
rts
; END of "sync to vsync" code
